@import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');

* {
  box-sizing: border-box;
}

body {
  background-color: #559600;
  background-image: url('./img/bg.jpg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  min-height: 100vh;
  font-family: 'Montserrat', sans-serif;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: rgb(255, 255, 255);
  margin: 0;
}
/* 
{
  background-image: url('photographer.jpg');  The image used
  background-color: #cccccc;  Used if the image is unavailable
  height: 500px;  You must set a specified height
  background-position: center;  Center the image 
  background-repeat: no-repeat;  Do not repeat the image
  background-size: cover;  Resize the background image to cover the entire container
} */

.container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: auto;
  height: 300px;
  width: 300px;
  position: relative;
  transform: scale(1);
}

.circle {
  background-color: #011c0f;
  height: 100%;
  width: 100%;
  border-radius: 50%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

.gradient-circle {
  background: conic-gradient(#006434 0% 40%, #fff 40% 60%, #559600 60% 100%);
  height: 320px;
  width: 320px;
  border-radius: 50%;
  position: absolute;
  top: -10px;
  left: -10px;
  z-index: -2;
}

.pointer {
  background-color: #fff;
  border-radius: 50%;
  height: 20px;
  width: 20px;
  display: block; /* <span> is inline by default */
}

.pointer-container {
  position: absolute;
  top: -40px;
  left: 140px;
  width: 20px;
  height: 190px;
  animation: rotate 7500ms linear forwards infinite;
  /* animation: name duration timing-function delay iteration-count direction fill-mode */
  transform-origin: bottom center;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.container.grow {
  animation: grow 3000ms linear forwards;
}

@keyframes grow {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.2);
  }
}

.container.shrink {
  animation: shrink 3000ms linear forwards;
}

@keyframes shrink {
  from {
    transform: scale(1.2);
  }
  to {
    transform: scale(1);
  }
}
